#!/bin/bash
set -e

OKD_USER=$1
OKD_PROJECT=$2

HERE=$(dirname "$(readlink -f "$0")")
ROOT=$(readlink -f "$HERE/../..")
. "$ROOT/configuration/environment"
. "$ROOT/utils/functions"

m "[okd] Creating user \"$OKD_USER\""

# By default, logging in with a non-existing user will create it
# Also note that all users have at least one corresponding identity automatically created for them
# See: https://docs.openshift.com/container-platform/3.11/admin_guide/manage_users.html

# For the default "allow_all" identity provider the password does *not matter*
# You can subsequently login with *any* password
# (On the Web Console you must use a non-empty password)

"$HERE/oc" \
login --username="$OKD_USER" --password=doesntmatter

m "[okd] Creating project \"$OKD_PROJECT\""

"$HERE/oc" \
new-project "$OKD_PROJECT"

if [ $# -gt 2 ]; then

	m "[okd] Granting privileges to project's default service account"

	"$HERE/oc" \
	login --username=system:admin --namespace=default

	# See: https://docs.openshift.com/container-platform/3.11/admin_guide/manage_scc.html#listing-security-context-constraints
	# See: https://docs.openshift.com/container-platform/3.11/architecture/additional_concepts/authorization.html#roles

	for P in "${@:3}"; do
		if [ "${P:0:4}" == scc: ]; then
			"$HERE/oc" \
			adm policy add-scc-to-user "${P:4}" \
				--namespace="$OKD_PROJECT" \
				--serviceaccount=default
		elif [ "${P:0:5}" == role: ]; then
			"$HERE/oc" \
			adm policy add-role-to-user ${P:5} \
				--namespace="$OKD_PROJECT" \
				--serviceaccount=default
		elif [ "${P:0:13}" == cluster-role: ]; then
			"$HERE/oc" \
			adm policy add-cluster-role-to-user ${P:13} \
				--namespace="$OKD_PROJECT" \
				--serviceaccount=default
		fi
	done

	"$ROOT/workloads/okd3/oc" \
	login --username="$OKD_USER"

fi
